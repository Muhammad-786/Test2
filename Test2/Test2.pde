// Example 15-8: Adjusting image brightness
PImage sourceImage;
PImage outputImage;

SimpleUI myUI;

void setup() {
  size(1000, 1000);
  myUI = new SimpleUI();
  
  Slider slider = myUI.addSlider("greys", 155, 885);
  slider.setSliderValue(0.5);
  myUI.addSimpleButton("Load file", 350,885);
}

void draw() {
  loadPixels();

  

  updatePixels();
  if( sourceImage != null ){
    
    image(sourceImage,100,50);
   
    
  }
  
  if(outputImage != null){
    
    image(outputImage, 100, 50);
  }
  myUI.update();
}
void handleUIEvent(UIEventData uied) {
  // here we just get the event to print its self
  // with "verbosity" set to 1, (1 = low, 3 = high, 0 = do not print anything)
  uied.print(2);
  
    if(uied.eventIsFromWidget("Load file")){
    myUI.openFileLoadDialog("Load an image");
    
  }
  
  //this catches the file Load information when the file Load dialogue's "open" button is hit
  if(uied.eventIsFromWidget("fileLoadDialog")){
    sourceImage = loadImage(uied.fileSelection);
    
  }

  // this catches events generated by the "greys" slider
  // gets the current slider value (always in range 0..1) 
  // and multiplies the slider val by 255 to get the pixel value
  if (uied.eventIsFromWidget("greys")) {
    outputImage = SLIDER(sourceImage);
  
  }
}
PImage SLIDER(PImage sliderw){
  PImage outputImage = createImage(sliderw.width,sliderw.height,RGB);
// We must also call loadPixels() on the PImage since we are going to read its pixels.  outputImage.loadPixels(); 
  for (int x = 0; x < sliderw.width; x++ ) {
    for (int y = 0; y < sliderw.height; y++ ) {

      // Calculate the 1D pixel location
      int loc = x + y*sliderw.width;

      // Get the R,G,B values from image
      float r = red  (sliderw.pixels[loc]);
      float g = green(sliderw.pixels[loc]);
      float b = blue (sliderw.pixels[loc]);

      // We calculate a multiplier ranging from 0.0 to 8.0 based on mouseX position. 
      // That multiplier changes the RGB value of each pixel.      
      float adjustBrightness = map(height, 0, width, 0, 8); 
      r *= adjustBrightness;
      g *= adjustBrightness;
      b *= adjustBrightness;

      // The RGB values are constrained between 0 and 255 before being set as a new color.      
      r = constrain(r, 0, 255); 
      g = constrain(g, 0, 255);
      b = constrain(b, 0, 255);

      // Make a new color and set pixel in the window
      color c = color(r, g, b);
      pixels[loc] = c;
      
      outputImage.set(x,y, color(r,g, b));
    }
  }
   outputImage.loadPixels();
  
  return outputImage;
  }
